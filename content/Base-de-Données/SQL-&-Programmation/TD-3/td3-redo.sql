create or replace package MAJ is 
PROCEDURE CREER_EMPLOYE (LE_NUEMPL IN NUMBER, LE_NOMEMPL IN VARCHAR2, LE_HEBDO IN NUMBER, LE_AFFECT IN NUMBER,LE_SALAIRE IN NUMBER);
PROCEDURE MODIF_DUREE_HEBDO(Nouv_Hebdo IN NUMBER,Nuempl_emp In NUMBER);
PROCEDURE MODIF_SALAIRE(SALAIRE_NOUV IN NUMBER,EMPL IN NUMBER);
PROCEDURE MODIF_TRAVAIL(NOUV_DUREE IN NUMBER,PROJ IN NUMBER,EMP IN NUMBER);
PROCEDURE INSERT_TRAVAIL (Nouv_nuempl IN NUMBER,NOUV_nuproj IN NUMBER,NOUV_duree IN NUMBER);
PROCEDURE INSERT_SERVICE(NOUV_nuserv IN NUMBER,NOUV_NOMSERV IN VARCHAR,NOUV_CHEF IN NUMBER);
END;

-------------------------------------------

create or replace package  BODY MAJ is 

PROCEDURE CREER_EMPLOYE (LE_NUEMPL IN NUMBER, LE_NOMEMPL IN VARCHAR2, LE_HEBDO IN NUMBER, LE_AFFECT IN NUMBER,LE_SALAIRE IN NUMBER) is
BEGIN
SET TRANSACTION READ WRITE;
INSERT INTO employe VALUES(LE_NUEMPL, LE_NOMEMPL, LE_HEBDO, LE_AFFECT,LE_SALAIRE);
COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
IF SQLCODE=-00001 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20401, 'Un employe avec le meme numero existe deja');
ELSIF SQLCODE=-2291 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20402, 'Le service auquel il est affecté n"existe pas');
ELSIF SQLCODE=-02290 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20403, 'la durée hebdomadaire d"un employe doit être inférieur ou égale à 35h');
ELSIF SQLCODE=-1438 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20404, 'Une valeur(nombre)dépasse le nombre de caractère autorisés');
ELSIF SQLCODE=-12899 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20405, 'Une valeur(chaine de caractère) dépasse le nombre de caractère autorisés');
ELSIF SQLCODE=-20406 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20406, 'Le salaire de cet emplyé dépasse celui de son chef de service');
ELSE RAISE_APPLICATION_ERROR (-20999,'Erreur inconnue'||SQLcode);
END IF; 
END;


PROCEDURE MODIF_DUREE_HEBDO(Nouv_Hebdo IN NUMBER,Nuempl_emp In NUMBER) is
BEGIN
UPDATE EMPLOYE SET HEBDO = NOUV_HEBDO WHERE NUEMPL = NUEMPL_EMP;
IF SQL%notfound = TRUE THEN ROLLBACK;
      RAISE_APPLICATION_ERROR(-20410,'pas de ligne trouver');
end if;
COMMIT;
EXCEPTION

WHEN OTHERS THEN 
    if SQLCODE =-02290 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20403, 'la durée hebdomadaire d"un employe doit être inférieur ou égale à 35h');
      
    ELSIF SQL%rowcount > 1 then ROLLBACK;
      RAISE_APPLICATION_ERROR(-20411,'Il y a trop de ligne trouver');
      
end if;
END;

PROCEDURE MODIF_SALAIRE(SALAIRE_NOUV IN NUMBER,EMPL IN NUMBER) is 
BEGIN
UPDATE EMPLOYE SET SALAIRE = SALAIRE_NOUV WHERE NUEMPL = EMPL;
IF SQL%notfound = TRUE THEN ROLLBACK;
      RAISE_APPLICATION_ERROR(-20410,'pas de ligne trouver');
end if;
COMMIT;
EXCEPTION 

WHEN OTHERS THEN
IF SQL%rowcount > 1 then ROLLBACK;
      RAISE_APPLICATION_ERROR(-20411,'Il y a trop de ligne trouver');
end if;

END;

PROCEDURE MODIF_TRAVAIL(NOUV_DUREE IN NUMBER,PROJ IN NUMBER,EMP IN NUMBER) is
BEGIN

UPDATE TRAVAIL T

SET DUREE = NOUV_DUREE WHERE (t.nuproj = PROJ) AND (t.nuempl = EMP) ;

IF SQL%notfound = TRUE THEN ROLLBACK;
      RAISE_APPLICATION_ERROR(-20410,'pas de ligne trouver');
end if;
COMMIT;
EXCEPTION 

WHEN OTHERS THEN

IF SQLCODE=-20002 THEN ROLLBACK;
      RAISE_APPLICATION_ERROR (-20403, 'la durée hebdomadaire d"un employe doit être inférieur ou égale à 35h');
end if;

END;


PROCEDURE INSERT_TRAVAIL (Nouv_nuempl IN NUMBER,NOUV_nuproj IN NUMBER,NOUV_duree IN NUMBER) is
BEGIN 
INSERT INTO TRAVAIL VALUES(NOUV_NUEMPL,NOUV_NUPROJ,NOUV_DUREE);

IF SQL%notfound = TRUE THEN ROLLBACK;
      RAISE_APPLICATION_ERROR(-20410,'pas de ligne trouver');
end if;

COMMIT;
EXCEPTION

WHEN OTHERS THEN
if SQLCODE =-20002 THEN ROLLBACK;
          RAISE_APPLICATION_ERROR (-20403, 'la durée hebdomadaire d"un employe doit être inférieur ou égale à 35h');
end if;

END;

PROCEDURE INSERT_SERVICE(NOUV_nuserv IN NUMBER,NOUV_NOMSERV IN VARCHAR,NOUV_CHEF IN NUMBER) is
BEGIN
INSERT INTO SERVICE VALUES(NOUV_NUSERV,NOUV_NOMSERV,NOUV_CHEF);
IF SQL%notfound = TRUE THEN ROLLBACK;
      RAISE_APPLICATION_ERROR(-20410,'pas de ligne trouver');
end if;
COMMIT;
EXCEPTION
WHEN OTHERS THEN ROLLBACK;
END;

END;
